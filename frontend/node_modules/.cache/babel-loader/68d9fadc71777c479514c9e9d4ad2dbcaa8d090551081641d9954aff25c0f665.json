{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\May Din\\\\Desktop\\\\Cinerate\\\\frontend\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import { Form, Row, Col, Card, Spinner } from \"react-bootstrap\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n\n// export default function Search() {\n//   const [query, setQuery] = useState(\"\");\n//   const [movies, setMovies] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const apiKey = \"341cf1f6a54f15a1c916c3a4adf58076\";\n//   console.log(apiKey);\n//   useEffect(() => {\n//     const searchMovies = async () => {\n//       setLoading(true);\n//       let queryStr = \"\";\n//       if (query.length > 0) {\n//         queryStr = `/search/movie?query=\"${query}\"&include_adult=false&language=en-US&page=1`; // add page query\n//       } else {\n//         queryStr =\n//           \"/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc\"; // add page query\n//       }\n//       try {\n//         // gawin mong dynamic yung bearer token\n//         const token = localStorage.getItem(\"token\");\n//         const options = {\n//           method: \"GET\",\n//           headers: {\n//             accept: \"application/json\",\n//             Authorization: `Bearer ${token}`,\n//           },\n//         };\n\n//         fetch(\"https://api.themoviedb.org/3\" + queryStr, options)\n//           .then((res) => res.json())\n//           .then((res) => {\n//             console.log(res.results);\n//             setMovies(res.results);\n//           })\n//           .catch((err) => console.error(err));\n\n//         // const res = await axios.get(`/api/movies/search`);\n//         // console.log(res);\n\n//         const response = await axios.get(`/api/movies/search?query=${query}`);\n//         console.log(response);\n//         setMovies(response.data);\n//       } catch (err) {\n//         console.error(err);\n//       }\n//       setLoading(false);\n//     };\n\n//     const timer = setTimeout(searchMovies, 500);\n//     return () => clearTimeout(timer);\n//   }, [query]);\n\n//   return (\n//     <div className=\"p-4\">\n//       <Form className=\"mb-4\">\n//         <Form.Control\n//           size=\"lg\"\n//           type=\"search\"\n//           placeholder=\"Search for movies...\"\n//           value={query}\n//           onChange={(e) => setQuery(e.target.value)}\n//         />\n//       </Form>\n\n//       {loading && <Spinner animation=\"border\" className=\"d-block mx-auto\" />}\n\n//       <Row xs={1} md={4} className=\"g-4\">\n//         {movies.map((movie) => (\n//           <Col key={movie.id}>\n//             <Card className=\"h-100 shadow-sm\">\n//               <Card.Img\n//                 variant=\"top\"\n//                 src={\n//                   movie.poster_path\n//                     ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n//                     : \"/placeholder.jpg\"\n//                 }\n//               />\n//               <Card.Body>\n//                 <Card.Title>{movie.title}</Card.Title>\n//                 <Card.Text className=\"text-muted small\">\n//                   {movie.release_date} • {movie.genres?.join(\", \")}\n//                 </Card.Text>\n//                 <Link\n//                   to={`/movie/${movie.id}`}\n//                   className=\"btn btn-primary w-100\"\n//                 >\n//                   View Details\n//                 </Link>\n//               </Card.Body>\n//             </Card>\n//           </Col>\n//         ))}\n//       </Row>\n//     </div>\n//   );\n// }\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Card, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const searchMovies = async () => {\n      setLoading(true);\n      try {\n        // Use your backend API to handle the search\n        // This keeps your API key secure on the server\n        const response = await axios.get(`/api/movies/search${query ? `?query=${encodeURIComponent(query)}` : ''}`);\n        setMovies(response.data);\n      } catch (err) {\n        console.error(\"Error searching movies:\", err);\n      }\n      setLoading(false);\n    };\n    const timer = setTimeout(searchMovies, 500);\n    return () => clearTimeout(timer);\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"lg\",\n        type: \"search\",\n        placeholder: \"Search for movies...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"d-block mx-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }, this), !loading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"No movies found. Try a different search term.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: movies.map(movie => {\n        var _movie$genres;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"h-100 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"/placeholder.jpg\",\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-muted small\",\n                children: [movie.release_date && new Date(movie.release_date).getFullYear(), ((_movie$genres = movie.genres) === null || _movie$genres === void 0 ? void 0 : _movie$genres.length) > 0 && ` • ${movie.genres.join(\", \")}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/movie/${movie.id}`,\n                className: \"btn btn-primary w-100\",\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"T0lfuvDd0+zhYoO0FralQijhDpU=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","Form","Row","Col","Card","Spinner","axios","Link","jsxDEV","_jsxDEV","Search","_s","query","setQuery","movies","setMovies","loading","setLoading","searchMovies","response","get","encodeURIComponent","data","err","console","error","timer","setTimeout","clearTimeout","className","children","Control","size","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","animation","length","xs","md","map","movie","_movie$genres","Img","variant","src","poster_path","alt","title","Body","Title","Text","release_date","Date","getFullYear","genres","join","to","id","_c","$RefreshReg$"],"sources":["C:/Users/May Din/Desktop/Cinerate/frontend/src/pages/Search.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { Form, Row, Col, Card, Spinner } from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export default function Search() {\r\n//   const [query, setQuery] = useState(\"\");\r\n//   const [movies, setMovies] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const apiKey = \"341cf1f6a54f15a1c916c3a4adf58076\";\r\n//   console.log(apiKey);\r\n//   useEffect(() => {\r\n//     const searchMovies = async () => {\r\n//       setLoading(true);\r\n//       let queryStr = \"\";\r\n//       if (query.length > 0) {\r\n//         queryStr = `/search/movie?query=\"${query}\"&include_adult=false&language=en-US&page=1`; // add page query\r\n//       } else {\r\n//         queryStr =\r\n//           \"/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc\"; // add page query\r\n//       }\r\n//       try {\r\n//         // gawin mong dynamic yung bearer token\r\n//         const token = localStorage.getItem(\"token\");\r\n//         const options = {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             accept: \"application/json\",\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         };\r\n\r\n//         fetch(\"https://api.themoviedb.org/3\" + queryStr, options)\r\n//           .then((res) => res.json())\r\n//           .then((res) => {\r\n//             console.log(res.results);\r\n//             setMovies(res.results);\r\n//           })\r\n//           .catch((err) => console.error(err));\r\n\r\n//         // const res = await axios.get(`/api/movies/search`);\r\n//         // console.log(res);\r\n\r\n//         const response = await axios.get(`/api/movies/search?query=${query}`);\r\n//         console.log(response);\r\n//         setMovies(response.data);\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//       }\r\n//       setLoading(false);\r\n//     };\r\n\r\n//     const timer = setTimeout(searchMovies, 500);\r\n//     return () => clearTimeout(timer);\r\n//   }, [query]);\r\n\r\n//   return (\r\n//     <div className=\"p-4\">\r\n//       <Form className=\"mb-4\">\r\n//         <Form.Control\r\n//           size=\"lg\"\r\n//           type=\"search\"\r\n//           placeholder=\"Search for movies...\"\r\n//           value={query}\r\n//           onChange={(e) => setQuery(e.target.value)}\r\n//         />\r\n//       </Form>\r\n\r\n//       {loading && <Spinner animation=\"border\" className=\"d-block mx-auto\" />}\r\n\r\n//       <Row xs={1} md={4} className=\"g-4\">\r\n//         {movies.map((movie) => (\r\n//           <Col key={movie.id}>\r\n//             <Card className=\"h-100 shadow-sm\">\r\n//               <Card.Img\r\n//                 variant=\"top\"\r\n//                 src={\r\n//                   movie.poster_path\r\n//                     ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n//                     : \"/placeholder.jpg\"\r\n//                 }\r\n//               />\r\n//               <Card.Body>\r\n//                 <Card.Title>{movie.title}</Card.Title>\r\n//                 <Card.Text className=\"text-muted small\">\r\n//                   {movie.release_date} • {movie.genres?.join(\", \")}\r\n//                 </Card.Text>\r\n//                 <Link\r\n//                   to={`/movie/${movie.id}`}\r\n//                   className=\"btn btn-primary w-100\"\r\n//                 >\r\n//                   View Details\r\n//                 </Link>\r\n//               </Card.Body>\r\n//             </Card>\r\n//           </Col>\r\n//         ))}\r\n//       </Row>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Card, Spinner } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Search() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const searchMovies = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Use your backend API to handle the search\r\n        // This keeps your API key secure on the server\r\n        const response = await axios.get(`/api/movies/search${query ? `?query=${encodeURIComponent(query)}` : ''}`);\r\n        setMovies(response.data);\r\n      } catch (err) {\r\n        console.error(\"Error searching movies:\", err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    const timer = setTimeout(searchMovies, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <Form className=\"mb-4\">\r\n        <Form.Control\r\n          size=\"lg\"\r\n          type=\"search\"\r\n          placeholder=\"Search for movies...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n      </Form>\r\n\r\n      {loading && <Spinner animation=\"border\" className=\"d-block mx-auto\" />}\r\n\r\n      {!loading && movies.length === 0 && (\r\n        <p className=\"text-center\">No movies found. Try a different search term.</p>\r\n      )}\r\n\r\n      <Row xs={1} md={4} className=\"g-4\">\r\n        {movies.map((movie) => (\r\n          <Col key={movie.id}>\r\n            <Card className=\"h-100 shadow-sm\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={\r\n                  movie.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n                    : \"/placeholder.jpg\"\r\n                }\r\n                alt={movie.title}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{movie.title}</Card.Title>\r\n                <Card.Text className=\"text-muted small\">\r\n                  {movie.release_date && new Date(movie.release_date).getFullYear()} \r\n                  {movie.genres?.length > 0 && ` • ${movie.genres.join(\", \")}`}\r\n                </Card.Text>\r\n                <Link\r\n                  to={`/movie/${movie.id}`}\r\n                  className=\"btn btn-primary w-100\"\r\n                >\r\n                  View Details\r\n                </Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}