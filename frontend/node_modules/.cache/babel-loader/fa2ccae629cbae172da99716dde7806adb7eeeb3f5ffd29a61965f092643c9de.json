{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\May Din\\\\Desktop\\\\Cinerate\\\\frontend\\\\src\\\\context\\\\ErrorContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\n// Create the ErrorContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorContext = /*#__PURE__*/createContext();\n\n// Error Provider Component\nexport const ErrorProvider = ({\n  children\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Handle API errors\n  const handleError = err => {\n    var _err$response, _err$response$data;\n    const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || \"An unexpected error occurred\";\n    setError(errorMessage);\n\n    // Automatically clear error after 5 seconds\n    setTimeout(() => setError(null), 5000);\n  };\n\n  // Show success message\n  const showSuccess = message => {\n    setSuccess(message);\n    setTimeout(() => setSuccess(null), 5000);\n  };\n\n  // Clear errors\n  const clearError = () => {\n    setError(null);\n    setSuccess(null);\n  };\n\n  // Global error display component\n  const ErrorDisplay = () => {\n    if (!error && !success) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"10px\",\n        right: \"10px\",\n        zIndex: 1000,\n        minWidth: \"250px\"\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: clearError,\n        dismissible: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: clearError,\n        dismissible: true,\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorContext.Provider, {\n    value: {\n      handleError,\n      showSuccess,\n      clearError,\n      ErrorDisplay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using error context\n_s(ErrorProvider, \"qm7yzSjwZd2V/erWocgy/M0tTY0=\");\n_c = ErrorProvider;\nexport const useError = () => {\n  _s2();\n  const context = useContext(ErrorContext);\n  if (!context) {\n    throw new Error(\"useError must be used within an ErrorProvider\");\n  }\n  return context;\n};\n_s2(useError, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ErrorProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","Alert","jsxDEV","_jsxDEV","ErrorContext","ErrorProvider","children","_s","error","setError","success","setSuccess","handleError","err","_err$response","_err$response$data","errorMessage","response","data","message","setTimeout","showSuccess","clearError","ErrorDisplay","style","position","top","right","zIndex","minWidth","variant","onClose","dismissible","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","useError","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/May Din/Desktop/Cinerate/frontend/src/context/ErrorContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\n// Create the ErrorContext\r\nconst ErrorContext = createContext();\r\n\r\n// Error Provider Component\r\nexport const ErrorProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  // Handle API errors\r\n  const handleError = (err) => {\r\n    const errorMessage =\r\n      err.response?.data?.message ||\r\n      err.message ||\r\n      \"An unexpected error occurred\";\r\n\r\n    setError(errorMessage);\r\n\r\n    // Automatically clear error after 5 seconds\r\n    setTimeout(() => setError(null), 5000);\r\n  };\r\n\r\n  // Show success message\r\n  const showSuccess = (message) => {\r\n    setSuccess(message);\r\n    setTimeout(() => setSuccess(null), 5000);\r\n  };\r\n\r\n  // Clear errors\r\n  const clearError = () => {\r\n    setError(null);\r\n    setSuccess(null);\r\n  };\r\n\r\n  // Global error display component\r\n  const ErrorDisplay = () => {\r\n    if (!error && !success) return null;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"10px\",\r\n          right: \"10px\",\r\n          zIndex: 1000,\r\n          minWidth: \"250px\",\r\n        }}\r\n      >\r\n        {error && (\r\n          <Alert variant=\"danger\" onClose={clearError} dismissible>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n          <Alert variant=\"success\" onClose={clearError} dismissible>\r\n            {success}\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ErrorContext.Provider\r\n      value={{\r\n        handleError,\r\n        showSuccess,\r\n        clearError,\r\n        ErrorDisplay,\r\n      }}\r\n    >\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using error context\r\nexport const useError = () => {\r\n  const context = useContext(ErrorContext);\r\n  if (!context) {\r\n    throw new Error(\"useError must be used within an ErrorProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}