{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\May Din\\\\Desktop\\\\Cinerate\\\\frontend\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Card, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const searchMovies = async () => {\n      // if (query.length < 3) {\n      //   setMovies([]);\n      //   return;\n      // }\n\n      setLoading(true);\n      try {\n        const options = {\n          method: 'GET',\n          headers: {\n            accept: 'application/json',\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNDFjZjFmNmE1NGYxNWExYzkxNmMzYTRhZGY1ODA3NiIsIm5iZiI6MTczODY3Nzg1NC4yNjksInN1YiI6IjY3YTIxZTVlZWVhODlhZGYwOTAyZmNmZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0ER-xO_CcWoyT9nLrXvbPfwGTw33RuoJEfEhKdoWl9I'\n          }\n        };\n        fetch('https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc', options).then(res => res.json()).then(res => {\n          console.log(res);\n          setMovies(response.data || []);\n        }).catch(err => console.error(err));\n\n        // const response = await axios.get(\"/api/movies/search\", {\n        //   params: { query },\n        // });\n      } catch (err) {\n        console.error(\"Search error:\", err);\n        setMovies([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const timer = setTimeout(searchMovies, 500);\n    return () => clearTimeout(timer);\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"lg\",\n        type: \"search\",\n        placeholder: \"Search for movies...\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"d-block mx-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), !loading && movies.length === 0 && query.length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-muted mb-4\",\n      children: [\"No movies found for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"/placeholder.jpg\",\n            style: {\n              height: \"400px\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"text-muted small mt-auto\",\n              children: [movie.release_date && new Date(movie.release_date).getFullYear(), movie.vote_average && ` • ⭐ ${movie.vote_average.toFixed(1)}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie.tmdbId}`,\n              className: \"btn btn-primary w-100 mt-2\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"T0lfuvDd0+zhYoO0FralQijhDpU=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","Form","Row","Col","Card","Spinner","axios","Link","jsxDEV","_jsxDEV","Search","_s","query","setQuery","movies","setMovies","loading","setLoading","searchMovies","options","method","headers","accept","Authorization","fetch","then","res","json","console","log","response","data","catch","err","error","timer","setTimeout","clearTimeout","className","children","Control","size","type","placeholder","value","onChange","e","target","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","animation","length","xs","md","map","movie","Img","variant","src","poster_path","style","height","objectFit","Body","Title","title","Text","release_date","Date","getFullYear","vote_average","toFixed","to","tmdbId","id","_c","$RefreshReg$"],"sources":["C:/Users/May Din/Desktop/Cinerate/frontend/src/pages/Search.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Card, Spinner } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Search() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const searchMovies = async () => {\r\n      // if (query.length < 3) {\r\n      //   setMovies([]);\r\n      //   return;\r\n      // }\r\n\r\n      setLoading(true);\r\n      try {\r\n        const options = {\r\n          method: 'GET',\r\n          headers: {\r\n            accept: 'application/json',\r\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNDFjZjFmNmE1NGYxNWExYzkxNmMzYTRhZGY1ODA3NiIsIm5iZiI6MTczODY3Nzg1NC4yNjksInN1YiI6IjY3YTIxZTVlZWVhODlhZGYwOTAyZmNmZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0ER-xO_CcWoyT9nLrXvbPfwGTw33RuoJEfEhKdoWl9I'\r\n          }\r\n        };\r\n        \r\n        fetch('https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc', options)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n              console.log(res)\r\n              setMovies(response.data || []);\r\n            }\r\n              \r\n          )\r\n          .catch(err => console.error(err));\r\n\r\n        // const response = await axios.get(\"/api/movies/search\", {\r\n        //   params: { query },\r\n        // });\r\n\r\n\r\n      } catch (err) {\r\n        console.error(\"Search error:\", err);\r\n        setMovies([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const timer = setTimeout(searchMovies, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <Form className=\"mb-4\">\r\n        <Form.Control\r\n          size=\"lg\"\r\n          type=\"search\"\r\n          placeholder=\"Search for movies...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </Form>\r\n\r\n      {loading && <Spinner animation=\"border\" className=\"d-block mx-auto\" />}\r\n\r\n      {!loading && movies.length === 0 && query.length >= 3 && (\r\n        <div className=\"text-center text-muted mb-4\">\r\n          No movies found for \"{query}\"\r\n        </div>\r\n      )}\r\n\r\n      <Row xs={1} md={4} className=\"g-4\">\r\n        {movies?.map((movie) => (\r\n          <Col key={movie.id}>\r\n            <Card className=\"h-100 shadow-sm\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={\r\n                  movie.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n                    : \"/placeholder.jpg\"\r\n                }\r\n                style={{ height: \"400px\", objectFit: \"cover\" }}\r\n              />\r\n              <Card.Body className=\"d-flex flex-column\">\r\n                <Card.Title>{movie.title}</Card.Title>\r\n                <Card.Text className=\"text-muted small mt-auto\">\r\n                  {movie.release_date &&\r\n                    new Date(movie.release_date).getFullYear()}\r\n                  {movie.vote_average &&\r\n                    ` • ⭐ ${movie.vote_average.toFixed(1)}`}\r\n                </Card.Text>\r\n                <Link\r\n                  to={`/movie/${movie.tmdbId}`}\r\n                  className=\"btn btn-primary w-100 mt-2\"\r\n                >\r\n                  View Details\r\n                </Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}