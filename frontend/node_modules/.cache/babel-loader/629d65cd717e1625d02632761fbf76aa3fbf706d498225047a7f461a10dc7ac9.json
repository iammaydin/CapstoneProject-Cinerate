{"ast":null,"code":"const express = require(\"express\");\nconst router = express.Router();\nconst Movie = require(\"../models/Movie\");\nconst Review = require(\"../models/Review\");\nconst auth = require(\"../middleware/auth\");\n\n// Get most viewed movies\nrouter.get(\"/most-viewed\", async (req, res) => {\n  try {\n    const movies = await Movie.find().sort({\n      views: -1\n    }).limit(10);\n    res.json(movies);\n  } catch (err) {\n    res.status(500).json({\n      error: \"Server error\"\n    });\n  }\n});\n\n// Get highest rated movies\nrouter.get(\"/highest-rated\", async (req, res) => {\n  try {\n    const movies = await Review.aggregate([{\n      $group: {\n        _id: \"$movie\",\n        avgRating: {\n          $avg: \"$rating\"\n        }\n      }\n    }, {\n      $sort: {\n        avgRating: -1\n      }\n    }, {\n      $limit: 10\n    }, {\n      $lookup: {\n        from: \"movies\",\n        localField: \"_id\",\n        foreignField: \"_id\",\n        as: \"movie\"\n      }\n    }, {\n      $unwind: \"$movie\"\n    }]);\n    res.json(movies);\n  } catch (err) {\n    res.status(500).json({\n      error: \"Server error\"\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Movie","Review","auth","get","req","res","movies","find","sort","views","limit","json","err","status","error","aggregate","$group","_id","avgRating","$avg","$sort","$limit","$lookup","from","localField","foreignField","as","$unwind","module","exports"],"sources":["C:/Users/May Din/Desktop/Cinerate/frontend/src/components/Filters.js"],"sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst Movie = require(\"../models/Movie\");\r\nconst Review = require(\"../models/Review\");\r\nconst auth = require(\"../middleware/auth\");\r\n\r\n// Get most viewed movies\r\nrouter.get(\"/most-viewed\", async (req, res) => {\r\n  try {\r\n    const movies = await Movie.find().sort({ views: -1 }).limit(10);\r\n    res.json(movies);\r\n  } catch (err) {\r\n    res.status(500).json({ error: \"Server error\" });\r\n  }\r\n});\r\n\r\n// Get highest rated movies\r\nrouter.get(\"/highest-rated\", async (req, res) => {\r\n  try {\r\n    const movies = await Review.aggregate([\r\n      { $group: { _id: \"$movie\", avgRating: { $avg: \"$rating\" } } },\r\n      { $sort: { avgRating: -1 } },\r\n      { $limit: 10 },\r\n      {\r\n        $lookup: {\r\n          from: \"movies\",\r\n          localField: \"_id\",\r\n          foreignField: \"_id\",\r\n          as: \"movie\",\r\n        },\r\n      },\r\n      { $unwind: \"$movie\" },\r\n    ]);\r\n    res.json(movies);\r\n  } catch (err) {\r\n    res.status(500).json({ error: \"Server error\" });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,KAAK,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AACxC,MAAMI,MAAM,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AAC1C,MAAMK,IAAI,GAAGL,OAAO,CAAC,oBAAoB,CAAC;;AAE1C;AACAC,MAAM,CAACK,GAAG,CAAC,cAAc,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE,CAAC;IAAE,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC;IAC/DL,GAAG,CAACM,IAAI,CAACL,MAAM,CAAC;EAClB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAe,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;;AAEF;AACAhB,MAAM,CAACK,GAAG,CAAC,gBAAgB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC/C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAML,MAAM,CAACc,SAAS,CAAC,CACpC;MAAEC,MAAM,EAAE;QAAEC,GAAG,EAAE,QAAQ;QAAEC,SAAS,EAAE;UAAEC,IAAI,EAAE;QAAU;MAAE;IAAE,CAAC,EAC7D;MAAEC,KAAK,EAAE;QAAEF,SAAS,EAAE,CAAC;MAAE;IAAE,CAAC,EAC5B;MAAEG,MAAM,EAAE;IAAG,CAAC,EACd;MACEC,OAAO,EAAE;QACPC,IAAI,EAAE,QAAQ;QACdC,UAAU,EAAE,KAAK;QACjBC,YAAY,EAAE,KAAK;QACnBC,EAAE,EAAE;MACN;IACF,CAAC,EACD;MAAEC,OAAO,EAAE;IAAS,CAAC,CACtB,CAAC;IACFtB,GAAG,CAACM,IAAI,CAACL,MAAM,CAAC;EAClB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAe,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEFc,MAAM,CAACC,OAAO,GAAG/B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}