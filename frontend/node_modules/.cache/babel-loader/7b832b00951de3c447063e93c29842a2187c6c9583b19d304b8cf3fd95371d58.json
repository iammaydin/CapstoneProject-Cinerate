{"ast":null,"code":"const express = require(\"express\");\nconst router = express.Router();\nconst auth = require(\"../middleware/auth\");\nconst User = require(\"../models/User\");\nconst Review = require(\"../models/Review\");\n\n// Get recommendations\nrouter.get(\"/\", auth, async (req, res) => {\n  try {\n    const currentUser = await User.findById(req.user.id).populate(\"reviews\");\n\n    // Find users with similar reviews\n    const similarUsers = await User.find({\n      \"reviews.movie\": {\n        $in: currentUser.reviews.map(r => r.movie)\n      },\n      _id: {\n        $ne: currentUser._id\n      }\n    }).limit(5);\n\n    // Get movies liked by similar users\n    const recommendations = await Review.find({\n      user: {\n        $in: similarUsers.map(u => u._id)\n      },\n      rating: {\n        $gte: 4\n      },\n      movie: {\n        $nin: currentUser.reviews.map(r => r.movie)\n      }\n    }).populate(\"movie\").limit(10);\n    res.json(recommendations);\n  } catch (err) {\n    res.status(500).json({\n      error: \"Server error\"\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","auth","User","Review","get","req","res","currentUser","findById","user","id","populate","similarUsers","find","$in","reviews","map","r","movie","_id","$ne","limit","recommendations","u","rating","$gte","$nin","json","err","status","error","module","exports"],"sources":["C:/Users/May Din/Desktop/Cinerate/frontend/src/components/Recommendations.js"],"sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst auth = require(\"../middleware/auth\");\r\nconst User = require(\"../models/User\");\r\nconst Review = require(\"../models/Review\");\r\n\r\n// Get recommendations\r\nrouter.get(\"/\", auth, async (req, res) => {\r\n  try {\r\n    const currentUser = await User.findById(req.user.id).populate(\"reviews\");\r\n\r\n    // Find users with similar reviews\r\n    const similarUsers = await User.find({\r\n      \"reviews.movie\": { $in: currentUser.reviews.map((r) => r.movie) },\r\n      _id: { $ne: currentUser._id },\r\n    }).limit(5);\r\n\r\n    // Get movies liked by similar users\r\n    const recommendations = await Review.find({\r\n      user: { $in: similarUsers.map((u) => u._id) },\r\n      rating: { $gte: 4 },\r\n      movie: { $nin: currentUser.reviews.map((r) => r.movie) },\r\n    })\r\n      .populate(\"movie\")\r\n      .limit(10);\r\n\r\n    res.json(recommendations);\r\n  } catch (err) {\r\n    res.status(500).json({ error: \"Server error\" });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,IAAI,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAC1C,MAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMK,MAAM,GAAGL,OAAO,CAAC,kBAAkB,CAAC;;AAE1C;AACAC,MAAM,CAACK,GAAG,CAAC,GAAG,EAAEH,IAAI,EAAE,OAAOI,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACF,MAAMC,WAAW,GAAG,MAAML,IAAI,CAACM,QAAQ,CAACH,GAAG,CAACI,IAAI,CAACC,EAAE,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC;;IAExE;IACA,MAAMC,YAAY,GAAG,MAAMV,IAAI,CAACW,IAAI,CAAC;MACnC,eAAe,EAAE;QAAEC,GAAG,EAAEP,WAAW,CAACQ,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK;MAAE,CAAC;MACjEC,GAAG,EAAE;QAAEC,GAAG,EAAEb,WAAW,CAACY;MAAI;IAC9B,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;;IAEX;IACA,MAAMC,eAAe,GAAG,MAAMnB,MAAM,CAACU,IAAI,CAAC;MACxCJ,IAAI,EAAE;QAAEK,GAAG,EAAEF,YAAY,CAACI,GAAG,CAAEO,CAAC,IAAKA,CAAC,CAACJ,GAAG;MAAE,CAAC;MAC7CK,MAAM,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAC;MACnBP,KAAK,EAAE;QAAEQ,IAAI,EAAEnB,WAAW,CAACQ,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK;MAAE;IACzD,CAAC,CAAC,CACCP,QAAQ,CAAC,OAAO,CAAC,CACjBU,KAAK,CAAC,EAAE,CAAC;IAEZf,GAAG,CAACqB,IAAI,CAACL,eAAe,CAAC;EAC3B,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZtB,GAAG,CAACuB,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAe,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGjC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}